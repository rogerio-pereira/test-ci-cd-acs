name: Deploy Test

on: 
  push:
    branches:
      - test
  pull_request:
    branches:
      - test
  workflow_dispatch:
    branches:
      - test
      

jobs:
  create-artifacts:
    runs-on: ubuntu-latest
    name: Create Deployment artifacts
    steps:
      - uses: actions/checkout@v2
      
      - name: Compile CSS and Javascript
        run: |
          npm install
          npm run prod
      
      - name: Configure PHP 7.4
        uses: shivammathur/setup-php@master
        with:
          php-version: 7.4
          extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml, zip, sqlite3
  
      - name: Copy ENV file
        shell: bash
        env:
          ENV_FILE: ${{ secrets.LARAVEL_ENV }}
        run: 'echo "$ENV_FILE" > .env'
          
      - name: Install composer dependencies
        run: composer install --no-interaction
        
      - name: Generate key
        run: php artisan key:generate
      
      # - name: Run tests
      #   run: php artisan test
        
      - name: Create deployment artifact
        run: tar -czf app.tar.gz --exclude=*.git --exclude=node_modules --exclude=.env --exclude=tests --exclude=vendor *
        
      - name: Store artifact for distribution
        uses: actions/upload-artifact@v2
        with:
          name: app-build
          path: app.tar.gz
          retention-days: 1      
        

  get-config-settings:
    runs-on: ubuntu-latest
    outputs:
      servers: ${{ steps.export-servers.outputs.servers }}
    steps:
      - uses: actions/checkout@v2
      
      - name: Export deployment matrix
        id: export-servers
        run: |
            echo pwd
            JSON="$(cat ./.github/test.json)"
            JSON="${JSON//'%'/'%25'}"
            JSON="${JSON//$'\n'/'%0A'}"
            JSON="${JSON//$'\r'/'%0D'}"
            echo "::set-output name=servers::$JSON"
  

  app-down:
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: [get-config-settings, create-artifacts]
    strategy:
      matrix: 
        server: ${{ fromJson(needs.get-config-settings.outputs.servers) }}
    steps:
      - name: "Application down"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ matrix.server.host }}
          username: ${{ matrix.server.username }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ matrix.server.port }}
          script: |
            echo "Application down"
            cd ${{ matrix.server.app_path }}
            php artisan down
      
        
  deploy:
    runs-on: ubuntu-latest
    needs: [get-config-settings, app-down, create-artifacts]
    strategy:
      matrix: 
        server: ${{ fromJson(needs.get-config-settings.outputs.servers) }}
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: app-build
          
      - name: Upload
        uses: appleboy/scp-action@master
        with:
            host: ${{ matrix.server.host }}
            username: ${{ matrix.server.username }}
            key: ${{ secrets.SSH_KEY }}
            port: ${{ matrix.server.port }}
            source: app.tar.gz
            target: ${{ matrix.server.upload_path }}
    
      - name: Extract zip file
        uses: appleboy/ssh-action@master
        env:
          LARAVEL_ENV: ${{ secrets.LARAVEL_ENV }}
        with:
          host: ${{ matrix.server.host }}
          username: ${{ matrix.server.username }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ matrix.server.port }}
          script: |
            echo "Extracting file"
            mkdir ${{ matrix.server.app_path }}
            tar xzf ${{ matrix.server.upload_path }}/app.tar.gz -C ${{ matrix.server.app_path }}

      - name: Remove zip file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ matrix.server.host }}
          username: ${{ matrix.server.username }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ matrix.server.port }}
          script: |
            echo "Remove zip file"
            rm ${{ matrix.server.upload_path }}//app.tar.gz

      # - name: Set Folder permissions
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ matrix.server.host }}
      #     username: ${{ matrix.server.username }}
      #     key: ${{ secrets.SSH_KEY }}
      #     port: ${{ matrix.server.port }}
      #     script: |
      #       echo "Set folder permissions"
      #       chown www-data:www-data -R ${{ matrix.server.app_path }}
      #       find ${{ matrix.server.app_path }} -type f -exec chmod 644 {} \;
      #       find ${{ matrix.server.app_path }} -type d -exec chmod 755 {} \;
      #       chmod 775 -R ${{ matrix.server.app_path }}/storage

      - name: Create .env file
        uses: appleboy/ssh-action@master
        env:
          LARAVEL_ENV: ${{ secrets.LARAVEL_ENV }}
        with:
          host: ${{ matrix.server.host }}
          username: ${{ matrix.server.username }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ matrix.server.port }}
          envs: LARAVEL_ENV
          script: |
            echo "Create .env file"
            cd ${{ matrix.server.app_path }}
            printf "%s" "$LARAVEL_ENV" > "${{ matrix.server.app_path }}/.env"

      - name: Run PHP commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ matrix.server.host }}
          username: ${{ matrix.server.username }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ matrix.server.port }}
          script: |
            echo "Running PHP commands"
            cd ${{ matrix.server.app_path }}
            composer install --no-interaction
            php artisan key:generate
            php artisan optimize
            php artisan migrate

      - name: Run npm commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ matrix.server.host }}
          username: ${{ matrix.server.username }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ matrix.server.port }}
          script: |
            echo "Running npm commands"
            cd ${{ matrix.server.app_path }}
            npm install
            npm run prod

  
  app-up:
    runs-on: ubuntu-latest
    needs: [get-config-settings, deploy]
    strategy:
      matrix: 
        server: ${{ fromJson(needs.get-config-settings.outputs.servers) }}
    steps:
      - name: "Application up"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ matrix.server.host }}
          username: ${{ matrix.server.username }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ matrix.server.port }}
          script: |
            echo "Application up"
            cd ${{ matrix.server.app_path }}
            php artisan up